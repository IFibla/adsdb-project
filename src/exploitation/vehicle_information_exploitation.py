from models.storage.layers.exploitation import Exploitation
import pandas as pd


class VehicleInformationExploitation(Exploitation):
    def _get_trusted_table_names(self) -> list[str]:
        return ["nhtsa_safety_rating", "mvc_crash", "mvc_vehicles"]

    def _get_exploitation_table_name(self) -> str:
        return "mvc_safety_rating_by_brand"

    def _join_tables(self) -> pd.DataFrame:
        dfs = {
            table_name: self.trusted_db_connector.get_table_as_dataframe(table_name)
            for table_name in self._get_trusted_table_names()
        }

        result_df = (
            dfs["mvc_vehicles"]
            .merge(
                dfs["mvc_crash"],
                how="left",
                left_on="collision_id",
                right_on="collision_id",
            )[
                [
                    "vehicle_make",
                    "vehicle_year",
                    "number_of_persons_injured",
                    "number_of_persons_killed",
                ]
            ]
            .groupby(["vehicle_make", "vehicle_year"], as_index=False)
            .sum()
            .merge(
                (
                    dfs["nhtsa_safety_rating"]
                    .dropna(subset="overall_rating")
                    .groupby(["make", "model_year"], as_index=False)["overall_rating"]
                    .mean()
                ),
                how="inner",
                left_on=["vehicle_make", "vehicle_year"],
                right_on=["make", "model_year"],
            )[
                [
                    "vehicle_make",
                    "vehicle_year",
                    "number_of_persons_injured",
                    "number_of_persons_killed",
                    "overall_rating",
                ]
            ]
        )
        result_df["num_crashes"] = (
            dfs["mvc_vehicles"]
            .groupby(["vehicle_make", "vehicle_year"], as_index=False)
            .size()["size"]
        )
        return result_df
